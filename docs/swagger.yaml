definitions:
  models.AuthReponse:
    properties:
      token:
        type: string
    type: object
  models.LoginDto:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RegisterDto:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  models.UserResponse:
    properties:
      user:
        $ref: '#/definitions/models.User'
    type: object
  response_error.ResponseError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login account
      parameters:
      - description: User login data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthReponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response_error.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response_error.ResponseError'
      summary: Login account
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register account
      parameters:
      - description: User registration data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RegisterDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthReponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response_error.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response_error.ResponseError'
      summary: Register account
      tags:
      - auth
  /user:
    get:
      description: return  user from the database by jwt token
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response_error.ResponseError'
      summary: return user by token
      tags:
      - Users
swagger: "2.0"
